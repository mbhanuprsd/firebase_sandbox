import 'dart:convert';
import 'dart:io';

import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_sandbox/items/book_list_item.dart';
import 'package:firebase_sandbox/models/book_model.dart';
import 'package:firebase_sandbox/models/google_book_model.dart';
import 'package:firebase_sandbox/pages/book_list_page.dart';
import 'package:firebase_sandbox/utils/app_utils.dart';
import 'package:flutter/material.dart';

class BookSearchPage extends StatefulWidget {
  @override
  State<StatefulWidget> createState() {
    return BookSearchState();
  }
}

class BookSearchState extends State<BookSearchPage> {
  String searchKey;
  List<BookModel> searchedBooks;
  final formKey = new GlobalKey<FormState>();

  @override
  Widget build(BuildContext context) {
    return new Scaffold(
      appBar: new AppBar(
        title: new Text('Login'),
        leading: IconButton(
          icon: Icon(Icons.arrow_back),
          onPressed: () {
            Navigator.pushReplacement(context,
                MaterialPageRoute(builder: (context) => BookListPage()));
          },
        ),
      ),
      body: new Container(
        padding: EdgeInsets.all(20.0),
        child: new Column(
          crossAxisAlignment: CrossAxisAlignment.stretch,
          children: <Widget>[
            new Form(
              key: formKey,
              child: new TextFormField(
                decoration: new InputDecoration(labelText: 'Search'),
                validator: (value) =>
                    value.isEmpty ? 'Please enter keyword' : null,
                onSaved: (value) => searchKey = value,
              ),
            ),
            new RaisedButton(
              child: new Text(
                'Search',
                style: TextStyle(fontSize: 20.0),
              ),
              onPressed: searchBooks,
              color: Colors.blue,
            ),
            (searchedBooks == null || searchedBooks.length == 0)
                ? new Text(
                    'No Books Available',
                    style: new TextStyle(
                        fontSize: 18.0, fontWeight: FontWeight.bold),
                  )
                : new Expanded(
                    child: new ListView.builder(
                        itemCount: searchedBooks.length,
                        itemBuilder: (BuildContext ctxt, int index) {
                          return new BookItem(
                            searchedBooks[index],
                            false,
                          );
                        }),
                  ),
          ],
        ),
      ),
    );
  }

  searchBooks() {
    final searchForm = formKey.currentState;
    searchForm.save();
    if (searchForm.validate()) {
      HttpClient()
          .getUrl(Uri.parse("https://www.googleapis.com/books/v1/volumes?q=" +
              searchKey)) // produces a request object
          .then((request) => request.close()) // sends the request
          .then((response) {
        response.transform(utf8.decoder).join().then((jsonString) {
          Map mapJson = json.decode(jsonString);
          Autogenerated booksData = Autogenerated.fromJson(mapJson);
          searchedBooks = new List();
          for (var item in booksData.items) {
            BookModel bookModel = new BookModel(
                item?.volumeInfo?.title,
                item?.volumeInfo?.authors?.join(', '),
                item?.volumeInfo?.imageLinks?.thumbnail,
                item?.volumeInfo?.description,
                item.id);
            searchedBooks.add(bookModel);
          }
          setState(() {});
        });
      });
    }
  }
}
